
* Ricerca di un elemento in un array/lista non ordinata
L' algoritmo torna la posizione di x in L se x è presente, -1 altrimenti
algoritmo RicercaSequenziale(array L, elem x) -> intero
	n = lunghezza di L
	i = 1
	for i = 1 to n do
		if(L[i] = x) then return i // trovato
	return -1 // non trovato

T(n): numero di elementi acceduti(linea 4) su un array di dimensione n
T_worst(n) = n
T_avg(n) = (n+1)/2 assunmendo la stessa probabilità in una qualsiasi posizione

=> Theta(n), inoltre questo è il miglio algoritmo ne non si ha nessuna ipotesi sugli elementi dell'array.

* Ricerca di un elemento in un array ordinato
Algoritmo di ricerca binaria: uno strumento molto potente, si può usare su qualsiasi tipo di array, sono solo su array formato da numeri.
Gli indici i e j indicano la posizione di L in cui cercare l'elemento x.
L'algoritmo torna la posizione di x in L, se x c'è, altrimenti -1
algoritmo RicercaBinariaRic(array L, elem x, int i, int j) -> intero
	if(x > j) then return -1
	m = (i+j)/2
	if(L[m] = x) then return mm
	if(L[m] > x) then return RicercaBinariaRic(L, x, i, m-1)
		     else return RicercaBinariaRic(L, x, m+1, j)

T(n) = T(n/2) + O(1) => T(n) = O(log n)


